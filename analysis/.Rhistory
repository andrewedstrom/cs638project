SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4.4,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4.2,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
d <- Prestige
varDescribe(d)
varPlot(d$income)
varPlot(d$education)
varPlot(d$women)
varPlot(d$education)
varPlot(d$income)
varPlot(d$women)
corr.test(d[,c('income','education','women')])
scatterplotMatrix(d,[d,'income','educatoin','women'])
scatterplotMatrix(d,[d,'income','educatoin','women'])
scatterplotMatrix(d,[d,c('income','educatoin','women')])
scatterplotMatrix(d,[,c('income','educatoin','women')])
scatterplotMatrix(d[,c('income','educatoin','women')])
scatterplotMatrix(d[,c('income','education','women')])
mod0 <- lm(income ~ education + women, data = d)
modelSummary(mod0)
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
res
d[res$Rownames,]
d[res$Rownames,]
d[res$Rownames,]
d[res$Rownames,]
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
d[res$Rownames,]
inf <- modelCaseAnalysis(mod0, Type = "INFLUENCEPLOT")
RemovedCases <- c('GENERAL.MANAGERS','PHYSICIANS')
d <- dfRemoveCases(d,RemovedCases)
mod <- lm(income ~ education + women, data = d)
modelSummary(mod)
library("gvlma")
modelAssumptions(mod,"NORMAL")
modelAssumptions(mod, "CONSTANT")
modelAssumptions(mod, "CONSTANT")
modelAssumptions(mod,"LINEAR")
d <- dFull
####################################################
## Week 8 Lab: Assumptions and transformations    ##
## Friday, October 28th, 2016                     ##
####################################################
############################################################
#### First Steps: Examine the data & check for outliers ####
############################################################
# We are going to return to the Prestige dataset. Remind yourself what's going on here.
d <- Prestige
varDescribe(d)
# Univariate exploration
varPlot(d$income) # positive skew
varPlot(d$education) # pretty normal
varPlot(d$women) # positive skew
# Bivariate exploration
corr.test(d[,c('income','education','women')])
scatterplotMatrix(d[,c('income','education','women')])
# Do the correlations match your intuitions?
# Fit our linear model predicting income from gender composition and education.
mod0 <- lm(income ~ education + women, data = d)
modelSummary(mod0) # sig relationship of education and income as well as women and income
#### Case Analyses: Residuals ####
# Are there cases that don't fit the model? Which?
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
d[res$Rownames,]
#### Case Analyses: Influence & Levarage ####
# Are there cases that exert a lot of influence on our model predictions? Which?
# Are they the same cases that did not fit the model? (From last analysis)
inf <- modelCaseAnalysis(mod0, Type = "INFLUENCEPLOT")
varPlot(d$income)
modelBoxCox(mod)
mod1 <- lm(log2(income) ~ education + women, data=d)
modelSummary(mod1)
log10(10)
log2(2)
modelAssumptions(mod1, "NORMAL")
modelAssumptions(mod1, "CONSTANT")
modelAssumptions(mod1, "LINEAR")
mod2 <- lm(log2(income) ~ education + sqrt(women), data=d)
modelSummary(mod2)
modelAssumptions(mod1, "NORMAL") # meh
modelAssumptions(mod1, "CONSTANT") # good
modelAssumptions(mod1, "NORMAL") # meh
modelAssumptions(mod1, "CONSTANT") # good
modelAssumptions(mod1, "LINEAR") # good
res2 <- modelCaseAnalysis(mod1, "RESIDUALS")
d[res2$Rownames]
res2 <- modelCaseAnalysis(mod1, "RESIDUALS")
d[res2$Rownames]
d[res2$Rownames,]
inf2 <- modelCaseAnalysis(mod1, "INFLUENCEPLOT")
RemovedCases2 <- c("NEWSBOYS","BABYSITTERS")
d <- dfRemoveCases(d, RemovedCases2)
mod3 <- lm(log2(income) ~ education + women, data=d)
modelSummary(mod3)
modelSummary(mod2)
d$log2income <- log2(d$income)
d$log2income <- log2(d$income)
Yhat <- seq(min(d$women),max(d$women), length=100)
dIncome <- data.frame(women=Yhat,education=mean(d$education))
dIncome <- modelPredictions(mod3,Income)
dIncome <- modelPredictions(mod3,dIncome)
scatterplot <- ggplot() +
geom_point(data=d, aes(x=women, y=log2income), color = 'black') +
geom_smooth(aes(ymin=CILo, ymax=CIHi, x=women, y=Predicted), data=dIncome,stat='identity', color='green')
scatterplot
# Create the graph
scatterplot <- ggplot() +
geom_point(data=d, aes(x=women, y=log2income), color = 'black') +
geom_smooth(aes(ymin=CILo, ymax=CIHi, x=women, y=Predicted), data=dIncome,stat='identity', color='green') +
theme_bw(base_size=14) +
scale_x_continuous("Percent women", breaks = seq(0,100,by=10)) +
scale_y_continuous("Log2 Income", breaks = seq(8,15,by=1)) +
labs(title="Effect of % Women on Income")
scatterplot
scatterplot <- ggplot(data=d, aes(x=income,y=education)) +
geom_point(color="black") +
stat_smooth(method='lm',formula=y~log(x)) +
theme_bw(base_size=14) +
scale_x_continuous("Income",breaks=seq(1000,20000,3000))
scale_y_continuous("Education", breaks=seq(6,18,by=1))
scatterplot <- ggplot(data=d, aes(x=income,y=education)) +
geom_point(color="black") +
stat_smooth(method='lm',formula=y~log(x)) +
theme_bw(base_size=14) +
scale_x_continuous("Income",breaks=seq(1000,20000,3000)) +
scale_y_continuous("Education", breaks=seq(6,18,by=1))
scatterplot
d <- read.csv("labeled.csv")
setwd("~/Desktop/CS 638 Stuffs/cs638project/analysis")
d <- read.csv("labeled.csv")
varDescribe(d)
varKeysToLookAt <- c('length','ltable_status','ltable_pop_trend','ltable_country_count','ltable_ecology','rtable_tCount','rtable_kingdom','rtable_phylum','rtable_class','rtable_order','ltable_family')
# convert popTrend to be a continuous var --> add order to levels so it makes sense
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = "Unknown"
d$ltbale_pop_trend = as.factor(d$new_pop_trend)
d$ltbale_pop_trend
levels(d$ltable_pop_trend)
varDescribe(d$ltable_pop_trend)
str(d$ltable_pop_trend)
d$ltbale_pop_trend
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d <- read.csv("labeled.csv")
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')][1]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')][1] == "Unkown"
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')][1] == "Unknown"
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')][1] == 'Unknown'
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = "Unknown"
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend
levels(as.factor(d$new_pop_trend))
d$new_pop_trend = levels(as.factor(d$new_pop_trend))
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = "Unknown"
d$new_pop_trend <- levels(as.factor(d$new_pop_trend))
d$new_pop_trend <- as.factor(d$new_pop_trend)
str(d$new_pop_trend)
d$new_pop_trend
str(d$new_pop_trend)
varRecode(d$new_pop_trend, c(3,1,2),c(1,2,0))
str(d$new_pop_trend)
ordered(d$new_pop_trend, levels = c("Decreasing", "Increasing", "Unknown"))
str(ordered(d$new_pop_trend, levels = c("Decreasing", "Increasing", "Unknown")))
str(ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing")))
d$new_pop_trend <- str(ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing")))
d$new_pop_trend
d$new_pop_trend <- str(ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing")))
d$new_pop_trend <- ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing"))
d$new_pop_trend = d$ltable_pop_trend
d <- read.csv("labeled.csv")
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = "Unknown"
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend <- as.factor(d$new_pop_trend)
str(d$new_pop_trend)
d$new_pop_trend <- ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing"))
d$new_pop_trend
str(d$new_pop_trend)
ordinalVarKeysToLookAt <- c('length','ltable_status','new_pop_trend','ltable_country_count','rtable_tCount')
dSubset <- d[,ordinalVarKeysToLookAt]
d[1]
str(d[1])
str(dSubset[1])
colnames(dSubset) <- c("length","status","popTrend",'countryCount','threatCount')
str(dSubset[2])
dSubset
d <- read.csv("labeled.csv")
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend = d$ltable_pop_trend
d$new_pop_trend = as.character(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
str(new_pop_trend)
str(d$new_pop_trend)
str(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d$new_pop_trend = d$ltable_pop_trend
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d$new_pop_trend
levels(d$new_pop_trend)
d[d[,c('new_pop_trend')] == Decreasing,c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Decreasing",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
levels(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "" && !is.na(d[,c('new_pop_trend')]]
d[d[,c('new_pop_trend')] == "" && !is.na(d$new_pop_trend)]
d[d[,c('new_pop_trend')] == "" && !is.na(d$new_pop_trend),]
d[,d[,c('new_pop_trend')] == "" && !is.na(d$new_pop_trend)]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])
!is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])
d[!is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]),c('new_pop_trend')]
d[!is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]),c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])
d[is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])]
d[is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]),]
d[,is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])]
is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')])
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d[is.na(d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]),c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "" & !is.na(d[,c('new_pop_trend')]),c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
d[d[,c('new_pop_trend')] == "" & !is.na(d[,c('new_pop_trend')]),c('new_pop_trend')][2]
d[d[,c('new_pop_trend')] == "" & !is.na(d[,c('new_pop_trend')]),c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]
levels(d$new_pop_trend)
d$new_pop_trend = as.character(d$new_pop_trend)
str(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend <- as.factor(d$new_pop_trend)
str(d$new_pop_trend)
ordinalVarKeysToLookAt <- c('length','ltable_status','new_pop_trend','ltable_country_count','rtable_tCount')
dSubset <- d[,ordinalVarKeysToLookAt]
# rename some columns for prettiness sake
colnames(dSubset) <- c("length","status","popTrend",'countryCount','threatCount')
str(dSubset[2])
str(d$status)
str(dSubset$status)
dSubset[] <- lapply(dSubset,as.integer)
dSubset
sjp.corr(dSubset)
library(sjPlot)
sjp.corr(dSubset)
# make things a bit prettier
sjp.setTheme(theme.font = NULL,
title.color = "black", title.size = 1.2, title.align = "left",
title.vjust = NULL, geom.outline.color = NULL, geom.outline.size = 0,
geom.boxoutline.size = 0.5, geom.boxoutline.color = "black",
geom.alpha = 1, geom.linetype = 1, geom.errorbar.size = 0.7,
geom.errorbar.linetype = 1, geom.label.color = NULL,
geom.label.size = 10, geom.label.alpha = 1, geom.label.angle = 0,
axis.title.color = "grey30", axis.title.size = 1.1,
axis.title.x.vjust = NULL, axis.title.y.vjust = NULL, axis.angle.x = 0,
axis.angle.y = 0, axis.angle = NULL, axis.textcolor.x = "black",
axis.textcolor.y = "black", axis.textcolor = NULL,
axis.linecolor.x = NULL, axis.linecolor.y = NULL, axis.linecolor = NULL,
axis.line.size = 0.5, axis.textsize.x = 1, axis.textsize.y = 1,
axis.textsize = NULL, axis.tickslen = NULL, axis.tickscol = NULL,
axis.ticksmar = NULL, axis.ticksize.x = NULL, axis.ticksize.y = NULL,
panel.backcol = NULL, panel.bordercol = NULL, panel.col = NULL,
panel.major.gridcol = NULL, panel.minor.gridcol = NULL,
panel.gridcol = NULL, panel.gridcol.x = NULL, panel.gridcol.y = NULL,
panel.major.linetype = 1, panel.minor.linetype = 1, plot.backcol = NULL,
plot.bordercol = NULL, plot.col = NULL, plot.margins = NULL,
legend.pos = "right", legend.just = NULL, legend.inside = FALSE,
legend.size = 1, legend.color = "black", legend.title.size = 1,
legend.title.color = "black", legend.title.face = "bold",
legend.backgroundcol = "white", legend.bordercol = "white",
legend.item.size = NULL, legend.item.backcol = "grey90",
legend.item.bordercol = "white")
sjp.corr(dSubset)
d <- read.csv("labeled.csv")
varDescribe(d)
str(d)
# convert popTrend to be a continuous var --> add order to levels so it makes sense
# first convert Unknown field to NA's for cleaner correlation values
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]= NA
d[d[,c('new_pop_trend')] == "" & !is.na(d[,c('new_pop_trend')]),c('new_pop_trend')] = NA
levels(d$new_pop_trend)
d$new_pop_trend = as.character(d$new_pop_trend)
str(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend <- as.factor(d$new_pop_trend)
str(d$new_pop_trend)
#d$new_pop_trend <- ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing"))
# select ordinal vars for correlation matrix
ordinalVarKeysToLookAt <- c('length','weight','ltable_status','new_pop_trend','ltable_country_count','rtable_tCount')
#install.packages("sjPlot")
library(sjPlot)
dSubset <- d[,ordinalVarKeysToLookAt]
# rename some columns for prettiness sake
colnames(dSubset) <- c("length",'weight',"status","popTrend",'countryCount','threatCount')
dSubset[] <- lapply(dSubset,as.integer)
dSubset
library(sjPlot)
# make things a bit prettier
sjp.setTheme(theme.font = NULL,
title.color = "black", title.size = 1.2, title.align = "left",
title.vjust = NULL, geom.outline.color = NULL, geom.outline.size = 0,
geom.boxoutline.size = 0.5, geom.boxoutline.color = "black",
geom.alpha = 1, geom.linetype = 1, geom.errorbar.size = 0.7,
geom.errorbar.linetype = 1, geom.label.color = NULL,
geom.label.size = 10, geom.label.alpha = 1, geom.label.angle = 0,
axis.title.color = "grey30", axis.title.size = 1.1,
axis.title.x.vjust = NULL, axis.title.y.vjust = NULL, axis.angle.x = 0,
axis.angle.y = 0, axis.angle = NULL, axis.textcolor.x = "black",
axis.textcolor.y = "black", axis.textcolor = NULL,
axis.linecolor.x = NULL, axis.linecolor.y = NULL, axis.linecolor = NULL,
axis.line.size = 0.5, axis.textsize.x = 1, axis.textsize.y = 1,
axis.textsize = NULL, axis.tickslen = NULL, axis.tickscol = NULL,
axis.ticksmar = NULL, axis.ticksize.x = NULL, axis.ticksize.y = NULL,
panel.backcol = NULL, panel.bordercol = NULL, panel.col = NULL,
panel.major.gridcol = NULL, panel.minor.gridcol = NULL,
panel.gridcol = NULL, panel.gridcol.x = NULL, panel.gridcol.y = NULL,
panel.major.linetype = 1, panel.minor.linetype = 1, plot.backcol = NULL,
plot.bordercol = NULL, plot.col = NULL, plot.margins = NULL,
legend.pos = "right", legend.just = NULL, legend.inside = FALSE,
legend.size = 1, legend.color = "black", legend.title.size = 1,
legend.title.color = "black", legend.title.face = "bold",
legend.backgroundcol = "white", legend.bordercol = "white",
legend.item.size = NULL, legend.item.backcol = "grey90",
legend.item.bordercol = "white")
sjp.corr(dSubset)
d <- read.csv("labeled.csv")
varDescribe(d)
str(d)
# convert popTrend to be a continuous var --> add order to levels so it makes sense
# first convert Unknown field to NA's for cleaner correlation values
levels(d$ltable_pop_trend)
d$new_pop_trend = d$ltable_pop_trend
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')] = NA
d[d[,c('new_pop_trend')] == "",c('new_pop_trend')]= NA
d[d[,c('new_pop_trend')] == "" & !is.na(d[,c('new_pop_trend')]),c('new_pop_trend')] = NA
levels(d$new_pop_trend)
d$new_pop_trend = as.character(d$new_pop_trend)
str(d$new_pop_trend)
d[d[,c('new_pop_trend')] == "Unknown",c('new_pop_trend')]
d$new_pop_trend <- as.factor(d$new_pop_trend)
str(d$new_pop_trend)
#d$new_pop_trend <- ordered(d$new_pop_trend, levels = c("Unknown","Decreasing", "Increasing"))
# select ordinal vars for correlation matrix
ordinalVarKeysToLookAt <- c('length','ltable_status','new_pop_trend','ltable_country_count','rtable_tCount')
#install.packages("sjPlot")
library(sjPlot)
dSubset <- d[,ordinalVarKeysToLookAt]
# rename some columns for prettiness sake
colnames(dSubset) <- c("length","status","popTrend",'countryCount','threatCount')
dSubset[] <- lapply(dSubset,as.integer)
dSubset
library(sjPlot)
# make things a bit prettier
sjp.setTheme(theme.font = NULL,
title.color = "black", title.size = 1.2, title.align = "left",
title.vjust = NULL, geom.outline.color = NULL, geom.outline.size = 0,
geom.boxoutline.size = 0.5, geom.boxoutline.color = "black",
geom.alpha = 1, geom.linetype = 1, geom.errorbar.size = 0.7,
geom.errorbar.linetype = 1, geom.label.color = NULL,
geom.label.size = 10, geom.label.alpha = 1, geom.label.angle = 0,
axis.title.color = "grey30", axis.title.size = 1.1,
axis.title.x.vjust = NULL, axis.title.y.vjust = NULL, axis.angle.x = 0,
axis.angle.y = 0, axis.angle = NULL, axis.textcolor.x = "black",
axis.textcolor.y = "black", axis.textcolor = NULL,
axis.linecolor.x = NULL, axis.linecolor.y = NULL, axis.linecolor = NULL,
axis.line.size = 0.5, axis.textsize.x = 1, axis.textsize.y = 1,
axis.textsize = NULL, axis.tickslen = NULL, axis.tickscol = NULL,
axis.ticksmar = NULL, axis.ticksize.x = NULL, axis.ticksize.y = NULL,
panel.backcol = NULL, panel.bordercol = NULL, panel.col = NULL,
panel.major.gridcol = NULL, panel.minor.gridcol = NULL,
panel.gridcol = NULL, panel.gridcol.x = NULL, panel.gridcol.y = NULL,
panel.major.linetype = 1, panel.minor.linetype = 1, plot.backcol = NULL,
plot.bordercol = NULL, plot.col = NULL, plot.margins = NULL,
legend.pos = "right", legend.just = NULL, legend.inside = FALSE,
legend.size = 1, legend.color = "black", legend.title.size = 1,
legend.title.color = "black", legend.title.face = "bold",
legend.backgroundcol = "white", legend.bordercol = "white",
legend.item.size = NULL, legend.item.backcol = "grey90",
legend.item.bordercol = "white")
sjp.corr(dSubset)
m <- lm(status ~ threatCount + countryCount)
m <- lm(status ~ threatCount + countryCount, data = dSubset)
modelSummary(M)
modelSummary(m)
m <- lm(status ~ threatCount + countryCount + popTrend, data = dSubset)
modelSummary(m)
dSubset$popTrend
m <- lm(status ~ threatCount + countryCount + popTrend + length, data = dSubset) # popTrend seems to have insufficient power (mostly decreasing, only a few increasing)
modelSummary(m)
m <- lm(status ~popTrend, data = dSubset) # popTrend seems to have insufficient power (mostly decreasing, only a few increasing)
modelSummary(m)
m <- lm(status ~ countryCount, data = dSubset) # popTrend seems to have insufficient power (mostly decreasing, only a few increasing)
modelSummary(m)
modelSummary(m,t=F)
m <- lm(status ~ popTrend + countryCount, data = dSubset) # popTrend seems to have insufficient power (mostly decreasing, only a few increasing)
modelSummary(m,t=F)
m3 <- lm(threatCount ~ length, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m3 <- lm(popTrend ~ length, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m3 <- lm(popTrend ~ threatCount, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m3 <- lm(length ~ threatCount, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m3 <- lm(threatCount ~ length, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m3 <- lm(countryCount ~ length, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m3,t=F)
m2 <- lm(status ~ countryCount, data = dSubset) # approaching significance F(1,146) = 2.696, p = .103
modelSummary(m2,t=F)
m1 <- lm(status ~ popTrend, data = dSubset) # popTrend seems to have insufficient power (mostly decreasing, only a few increasing)
modelSummary(m1,t=F)
m3 <- lm(status ~ threatCount, data = dSubset)
modelSummary(m3,t=F)
m3 <- lm(status ~ threatCount, data = dSubset)
modelSummary(m3,t=F)

y1 = c(27.45
29.55
31
31.88
36.1)
x = c(5,10,20,30)
CE = c(27.45,29.55,31,31.88,36.1)
plot(x, CE)
x = c(5,10,20,30)
CE = c(27.45,29.55,31.88,36.1)
plot(x, CE)
lines(x,CE)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon))
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon)
x = c(5,10,20,30)
CE = c(27.45,29.55,31.88,36.1)
plot(x, CE, ylim = c(20,50))
lines(x,CE)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x, SW))
lines(x[1:3], SW[1:3]))
lines(x[1:3], SW[1:3]))
lines(x[1:3], SW[1:3])
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation")
lines(x,CE, col = 1)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest Angle of Separation At Which Two Directions Are Visible VS Speed")
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two Directions are visible VS Speed")
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two Directions are visible plotted against speed")
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two motion vectors are visible \n plotted against speed")
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two motion vectors are visible \n Vs. Speed (deg/sec)")
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
x = c(5,10,20,30)
CE = c(27.45,29.55,31.88,36.1)
plot(x, CE, ylim = c(20,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = CElowCon
sd = 5
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
y = CElowCon
sd = c(5,3,4,2,1)
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
y = CElowCon
sd = c(5,3,4,2)
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(1,1, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(1,1, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
legend(5,50, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
legend(5,52, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
legend(5,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(5,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
legend(4,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
legend(4.5,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4.5,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4.4,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
x = c(5,10,20,30)
CE = c(17.31,19.47,21.06,25.58)
plot(x, CE, ylim = c(15,50), xlab = "Speed (deg/sec)", ylab = "Degrees of Separation", main = "Lowest angle of separation two \n motion vectors are visible Vs. Speed (deg/sec)")
lines(x,CE, col = 1)
y = CE
SE = c(0.62159718,0.522528401,0.710792492,1.205424127)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
CElowCon = c(35.77,41.88,42.94,45.31)
points(x, CElowCon)
lines(x, CElowCon, col = 2)
y = CElowCon
SE = c(0.7046727842,1.617101531,0.7279752171,1.377432913)
sd = SE
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
SW = c(21.28, 22.985, 24.905,NA)
points(x, SW)
lines(x[1:3], SW[1:3], col = 3)
y = SW[1:3]
SE = c(1.96,2.63,1.1)
sd = SE
trueX = x
x = x[1:3]
segments(x, y-sd,x, y+sd)
epsilon = 0.02
segments(x-epsilon,y-sd,x+epsilon,y-sd)
segments(x-epsilon,y+sd,x+epsilon,y+sd)
legend(4.2,51, c("CE", "CE - 20% con", "SW"), lty = c(1,1,1), col = c(1,2,3))
x = trueX
d <- Prestige
varDescribe(d)
varPlot(d$income)
varPlot(d$education)
varPlot(d$women)
varPlot(d$education)
varPlot(d$income)
varPlot(d$women)
corr.test(d[,c('income','education','women')])
scatterplotMatrix(d,[d,'income','educatoin','women'])
scatterplotMatrix(d,[d,'income','educatoin','women'])
scatterplotMatrix(d,[d,c('income','educatoin','women')])
scatterplotMatrix(d,[,c('income','educatoin','women')])
scatterplotMatrix(d[,c('income','educatoin','women')])
scatterplotMatrix(d[,c('income','education','women')])
mod0 <- lm(income ~ education + women, data = d)
modelSummary(mod0)
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
res
d[res$Rownames,]
d[res$Rownames,]
d[res$Rownames,]
d[res$Rownames,]
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
d[res$Rownames,]
inf <- modelCaseAnalysis(mod0, Type = "INFLUENCEPLOT")
RemovedCases <- c('GENERAL.MANAGERS','PHYSICIANS')
d <- dfRemoveCases(d,RemovedCases)
mod <- lm(income ~ education + women, data = d)
modelSummary(mod)
library("gvlma")
modelAssumptions(mod,"NORMAL")
modelAssumptions(mod, "CONSTANT")
modelAssumptions(mod, "CONSTANT")
modelAssumptions(mod,"LINEAR")
d <- dFull
####################################################
## Week 8 Lab: Assumptions and transformations    ##
## Friday, October 28th, 2016                     ##
####################################################
############################################################
#### First Steps: Examine the data & check for outliers ####
############################################################
# We are going to return to the Prestige dataset. Remind yourself what's going on here.
d <- Prestige
varDescribe(d)
# Univariate exploration
varPlot(d$income) # positive skew
varPlot(d$education) # pretty normal
varPlot(d$women) # positive skew
# Bivariate exploration
corr.test(d[,c('income','education','women')])
scatterplotMatrix(d[,c('income','education','women')])
# Do the correlations match your intuitions?
# Fit our linear model predicting income from gender composition and education.
mod0 <- lm(income ~ education + women, data = d)
modelSummary(mod0) # sig relationship of education and income as well as women and income
#### Case Analyses: Residuals ####
# Are there cases that don't fit the model? Which?
res <- modelCaseAnalysis(mod0, Type="RESIDUALS")
d[res$Rownames,]
#### Case Analyses: Influence & Levarage ####
# Are there cases that exert a lot of influence on our model predictions? Which?
# Are they the same cases that did not fit the model? (From last analysis)
inf <- modelCaseAnalysis(mod0, Type = "INFLUENCEPLOT")
varPlot(d$income)
modelBoxCox(mod)
mod1 <- lm(log2(income) ~ education + women, data=d)
modelSummary(mod1)
log10(10)
log2(2)
modelAssumptions(mod1, "NORMAL")
modelAssumptions(mod1, "CONSTANT")
modelAssumptions(mod1, "LINEAR")
mod2 <- lm(log2(income) ~ education + sqrt(women), data=d)
modelSummary(mod2)
modelAssumptions(mod1, "NORMAL") # meh
modelAssumptions(mod1, "CONSTANT") # good
modelAssumptions(mod1, "NORMAL") # meh
modelAssumptions(mod1, "CONSTANT") # good
modelAssumptions(mod1, "LINEAR") # good
res2 <- modelCaseAnalysis(mod1, "RESIDUALS")
d[res2$Rownames]
res2 <- modelCaseAnalysis(mod1, "RESIDUALS")
d[res2$Rownames]
d[res2$Rownames,]
inf2 <- modelCaseAnalysis(mod1, "INFLUENCEPLOT")
RemovedCases2 <- c("NEWSBOYS","BABYSITTERS")
d <- dfRemoveCases(d, RemovedCases2)
mod3 <- lm(log2(income) ~ education + women, data=d)
modelSummary(mod3)
modelSummary(mod2)
d$log2income <- log2(d$income)
d$log2income <- log2(d$income)
Yhat <- seq(min(d$women),max(d$women), length=100)
dIncome <- data.frame(women=Yhat,education=mean(d$education))
dIncome <- modelPredictions(mod3,Income)
dIncome <- modelPredictions(mod3,dIncome)
scatterplot <- ggplot() +
geom_point(data=d, aes(x=women, y=log2income), color = 'black') +
geom_smooth(aes(ymin=CILo, ymax=CIHi, x=women, y=Predicted), data=dIncome,stat='identity', color='green')
scatterplot
# Create the graph
scatterplot <- ggplot() +
geom_point(data=d, aes(x=women, y=log2income), color = 'black') +
geom_smooth(aes(ymin=CILo, ymax=CIHi, x=women, y=Predicted), data=dIncome,stat='identity', color='green') +
theme_bw(base_size=14) +
scale_x_continuous("Percent women", breaks = seq(0,100,by=10)) +
scale_y_continuous("Log2 Income", breaks = seq(8,15,by=1)) +
labs(title="Effect of % Women on Income")
scatterplot
scatterplot <- ggplot(data=d, aes(x=income,y=education)) +
geom_point(color="black") +
stat_smooth(method='lm',formula=y~log(x)) +
theme_bw(base_size=14) +
scale_x_continuous("Income",breaks=seq(1000,20000,3000))
scale_y_continuous("Education", breaks=seq(6,18,by=1))
scatterplot <- ggplot(data=d, aes(x=income,y=education)) +
geom_point(color="black") +
stat_smooth(method='lm',formula=y~log(x)) +
theme_bw(base_size=14) +
scale_x_continuous("Income",breaks=seq(1000,20000,3000)) +
scale_y_continuous("Education", breaks=seq(6,18,by=1))
scatterplot
install.packages("RXKCD")
#best practice would be to install this through R, not RStudio
library(RXKCD) #this command loads the "RXKCD" package
#What's this package for?
#for example...
?getXKCD
#getting XKCD comic strips (any XKCD comic!), like this one!
getXKCD(552)
getXKCD(551)
setwd("~/Desktop/CS 638 Stuffs/cs638project")
d <- read.csv("blocking/candidate_set_with_added_features.csv")
str(d)
levels(d$ltable_pop_trend)
corr.test(d[,c('rtable_tCount','rtable_status','rtable_phylum','rtable_class','rtable_order','rtable_family','rtable_genus','')])
corr.test(d[,c('rtable_tCount','rtable_status','rtable_phylum','rtable_class','rtable_order','rtable_family','rtable_genus')])
d$rtable_status_NUM <- as.numeric(d2$rtable_status)
d$rtable_status_NUM <- as.numeric(d$rtable_status)
d$rtable_status_NUM <- as.numeric(d$rtable_status)
d$rtable_phylum_NUM <- as.numeric(d$rtable_phylum)
d$rtable_class_NUM <- as.numeric(d$rtable_class)
d$rtable_order_NUM <- as.numeric(d$rtable_order)
d$rtable_family_NUM <- as.numeric(d$rtable_family)
d$rtable_genus_NUM <- as.numeric(d$rtable_genus)
corr.test(d[,c('rtable_tCount','rtable_status_NUM','rtable_phylumNUM','rtable_class_NUM','rtable_order_NUM','rtable_family_NUM','rtable_genus_NUM')])
corr.test(d[,c('rtable_tCount','rtable_status_NUM','rtable_phylum_NUM','rtable_class_NUM','rtable_order_NUM','rtable_family_NUM','rtable_genus_NUM')])
str(d)
d$rtable_kingdom_NUM <- as.numeric(d$rtable_kingdom)
corr.test(d[,c('rtable_tCount','rtable_status_NUM','rtable_kingdom_NUM','rtable_phylum_NUM','rtable_class_NUM','rtable_order_NUM','rtable_family_NUM','rtable_genus_NUM')])
d$ltable_status_NUM <- as.numeric(d$ltable_status)
d$ltable_pop_trend_NUM <- as.numeric(d$ltable_pop_trend)
corr.test(d[,c('ltable_status_NUM','ltable_pop_trend_NUM','ltable_country_count')])
str(d)
d$ltable_ecology_NUM <- as.numeric(d$ltable_ecology)
corr.test(d[,c('ltable_status_NUM','ltable_pop_trend_NUM','ltable_country_count','ltable_ecology_NUM')])
str(d)
d$rtable_threat_keywords_NUM <- as.numeric(d$rtable_threat_keywords)
d$rtable_conservation_keywords_NUM <- as.numeric(d$rtable_conservation_keywords)
corr.test(d[,c('rtable_conservation_keywords_NUM','rtable_threat_keywords_NUM','rtable_tCount','rtable_status_NUM','rtable_kingdom_NUM','rtable_phylum_NUM','rtable_class_NUM','rtable_order_NUM','rtable_family_NUM','rtable_genus_NUM')])
corr.test(d[,c('rtable_conservation_keywords_NUM','rtable_threat_keywords_NUM','rtable_tCount','rtable_status_NUM','rtable_kingdom_NUM','rtable_phylum_NUM','rtable_class_NUM','rtable_order_NUM','rtable_family_NUM','rtable_genus_NUM')])
varDescribeBy(d$rtable_phylum,d$rtable_status)
varDescribeBy(d$rtable_phylum_NUM,d$rtable_status_NUM)
str(rtable_phylum_NUM)
str(d$rtable_phylum_NUM)
varDescribe(d$rtable_phylum_NUM)
varDescribeBy(d$rtable_phylum_NUM,d$rtable_status_NUM)
varDescribe(d$rtable_status_NUM)
varDescribeBy(d$rtable_status_NUM,d$rtable_phylum_NUM)
levels(d$rtable_phylum)
levels(d$rtable_status)
